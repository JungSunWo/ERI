<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ERI.demo.mappers.EmpLstMapper">

    <!-- 직원 목록 조회 (페이징) - 삭제되지 않은 데이터만 -->
    <select id="selectEmpLstListWithPaging" resultType="com.ERI.demo.vo.EmpLstVO">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY REG_DATE DESC) AS rowNum,
            EMP_ID,
            EMP_NM,
            EMP_DEPT_CD,
            EMP_POS_CD,
            EMP_STS_CD,
            RGST_DT,
            RGST_TM,
            RGST_EMP_ID,
            UPDT_DT,
            UPDT_TM,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_DATE,
            UPD_DATE
        FROM TB_EMP_LST
        WHERE DEL_YN = 'N'
        <if test="empLstVO.empId != null and empLstVO.empId != ''">
            AND EMP_ID LIKE CONCAT('%', #{empLstVO.empId}, '%')
        </if>
        <if test="empLstVO.empNm != null and empLstVO.empNm != ''">
            AND EMP_NM LIKE CONCAT('%', #{empLstVO.empNm}, '%')
        </if>
        <if test="empLstVO.empDeptCd != null and empLstVO.empDeptCd != ''">
            AND EMP_DEPT_CD = #{empLstVO.empDeptCd}
        </if>
        <if test="empLstVO.empPosCd != null and empLstVO.empPosCd != ''">
            AND EMP_POS_CD = #{empLstVO.empPosCd}
        </if>
        <if test="empLstVO.empStsCd != null and empLstVO.empStsCd != ''">
            AND EMP_STS_CD = #{empLstVO.empStsCd}
        </if>
        ORDER BY REG_DATE DESC
        LIMIT #{pageRequest.offset}, #{pageRequest.size}
    </select>

    <!-- 직원 목록 수 조회 - 삭제되지 않은 데이터만 -->
    <select id="selectEmpLstListCount" resultType="long">
        SELECT COUNT(*)
        FROM TB_EMP_LST
        WHERE DEL_YN = 'N'
        <if test="empLstVO.empId != null and empLstVO.empId != ''">
            AND EMP_ID LIKE CONCAT('%', #{empLstVO.empId}, '%')
        </if>
        <if test="empLstVO.empNm != null and empLstVO.empNm != ''">
            AND EMP_NM LIKE CONCAT('%', #{empLstVO.empNm}, '%')
        </if>
        <if test="empLstVO.empDeptCd != null and empLstVO.empDeptCd != ''">
            AND EMP_DEPT_CD = #{empLstVO.empDeptCd}
        </if>
        <if test="empLstVO.empPosCd != null and empLstVO.empPosCd != ''">
            AND EMP_POS_CD = #{empLstVO.empPosCd}
        </if>
        <if test="empLstVO.empStsCd != null and empLstVO.empStsCd != ''">
            AND EMP_STS_CD = #{empLstVO.empStsCd}
        </if>
    </select>

    <!-- 직원 목록 조회 (페이징 없음) - 삭제되지 않은 데이터만 -->
    <select id="selectEmpLstList" parameterType="com.ERI.demo.vo.EmpLstVO" resultType="com.ERI.demo.vo.EmpLstVO">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY REG_DATE DESC) AS rowNum,
            EMP_ID,
            EMP_NM,
            EMP_DEPT_CD,
            EMP_POS_CD,
            EMP_STS_CD,
            RGST_DT,
            RGST_TM,
            RGST_EMP_ID,
            UPDT_DT,
            UPDT_TM,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_DATE,
            UPD_DATE
        FROM TB_EMP_LST
        WHERE DEL_YN = 'N'
        <if test="empId != null and empId != ''">
            AND EMP_ID LIKE CONCAT('%', #{empId}, '%')
        </if>
        <if test="empNm != null and empNm != ''">
            AND EMP_NM LIKE CONCAT('%', #{empNm}, '%')
        </if>
        <if test="empDeptCd != null and empDeptCd != ''">
            AND EMP_DEPT_CD = #{empDeptCd}
        </if>
        <if test="empPosCd != null and empPosCd != ''">
            AND EMP_POS_CD = #{empPosCd}
        </if>
        <if test="empStsCd != null and empStsCd != ''">
            AND EMP_STS_CD = #{empStsCd}
        </if>
        ORDER BY REG_DATE DESC
    </select>

    <!-- 직원 상세 조회 - 삭제되지 않은 데이터만 -->
    <select id="selectEmpLst" parameterType="string" resultType="com.ERI.demo.vo.EmpLstVO">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY REG_DATE DESC) AS rowNum,
            EMP_ID,
            EMP_NM,
            EMP_DEPT_CD,
            EMP_POS_CD,
            EMP_STS_CD,
            RGST_DT,
            RGST_TM,
            RGST_EMP_ID,
            UPDT_DT,
            UPDT_TM,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_DATE,
            UPD_DATE
        FROM TB_EMP_LST
        WHERE EMP_ID = #{empId} AND DEL_YN = 'N'
    </select>

    <!-- 직원 등록 -->
    <insert id="insertEmpLst" parameterType="com.ERI.demo.vo.EmpLstVO">
        INSERT INTO TB_EMP_LST (
            EMP_ID,
            EMP_NM,
            EMP_DEPT_CD,
            EMP_POS_CD,
            EMP_STS_CD,
            RGST_DT,
            RGST_TM,
            RGST_EMP_ID,
            UPDT_DT,
            UPDT_TM,
            UPDT_EMP_ID,
            DEL_YN,
            REG_DATE,
            UPD_DATE
        ) VALUES (
            #{empId},
            #{empNm},
            #{empDeptCd},
            #{empPosCd},
            #{empStsCd},
            #{rgstDt},
            #{rgstTm},
            #{rgstEmpId},
            #{updtDt},
            #{updtTm},
            #{updtEmpId},
            'N',
            NOW(),
            NOW()
        )
    </insert>

    <!-- 직원 수정 -->
    <update id="updateEmpLst" parameterType="com.ERI.demo.vo.EmpLstVO">
        UPDATE TB_EMP_LST
        SET EMP_NM = #{empNm},
            EMP_DEPT_CD = #{empDeptCd},
            EMP_POS_CD = #{empPosCd},
            EMP_STS_CD = #{empStsCd},
            UPDT_DT = #{updtDt},
            UPDT_TM = #{updtTm},
            UPDT_EMP_ID = #{updtEmpId},
            UPD_DATE = NOW()
        WHERE EMP_ID = #{empId} AND DEL_YN = 'N'
    </update>

    <!-- 직원 논리적 삭제 -->
    <update id="deleteEmpLst" parameterType="string">
        UPDATE TB_EMP_LST
        SET DEL_YN = 'Y',
            DEL_DATE = NOW(),
            UPD_DATE = NOW()
        WHERE EMP_ID = #{empId} AND DEL_YN = 'N'
    </update>

    <!-- 직원 삭제 복구 -->
    <update id="restoreEmpLst" parameterType="string">
        UPDATE TB_EMP_LST
        SET DEL_YN = 'N',
            DEL_DATE = NULL,
            UPD_DATE = NOW()
        WHERE EMP_ID = #{empId} AND DEL_YN = 'Y'
    </update>

    <!-- 삭제된 직원 목록 조회 -->
    <select id="selectDeletedEmpLstList" parameterType="com.ERI.demo.vo.EmpLstVO" resultType="com.ERI.demo.vo.EmpLstVO">
        SELECT 
            EMP_ID,
            EMP_NM,
            EMP_DEPT_CD,
            EMP_POS_CD,
            EMP_STS_CD,
            RGST_DT,
            RGST_TM,
            RGST_EMP_ID,
            UPDT_DT,
            UPDT_TM,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_DATE,
            UPD_DATE
        FROM TB_EMP_LST
        WHERE DEL_YN = 'Y'
        <if test="empId != null and empId != ''">
            AND EMP_ID LIKE CONCAT('%', #{empId}, '%')
        </if>
        <if test="empNm != null and empNm != ''">
            AND EMP_NM LIKE CONCAT('%', #{empNm}, '%')
        </if>
        <if test="empDeptCd != null and empDeptCd != ''">
            AND EMP_DEPT_CD = #{empDeptCd}
        </if>
        <if test="empPosCd != null and empPosCd != ''">
            AND EMP_POS_CD = #{empPosCd}
        </if>
        <if test="empStsCd != null and empStsCd != ''">
            AND EMP_STS_CD = #{empStsCd}
        </if>
        ORDER BY DEL_DATE DESC
    </select>

    <!-- 삭제된 직원 상세 조회 -->
    <select id="selectDeletedEmpLst" parameterType="string" resultType="com.ERI.demo.vo.EmpLstVO">
        SELECT 
            EMP_ID,
            EMP_NM,
            EMP_DEPT_CD,
            EMP_POS_CD,
            EMP_STS_CD,
            RGST_DT,
            RGST_TM,
            RGST_EMP_ID,
            UPDT_DT,
            UPDT_TM,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_DATE,
            UPD_DATE
        FROM TB_EMP_LST
        WHERE EMP_ID = #{empId} AND DEL_YN = 'Y'
    </select>

    <!-- 직원번호로 직원 조회 (삭제 여부 무관) -->
    <select id="selectByEmpId" parameterType="string" resultType="com.ERI.demo.vo.EmpLstVO">
        SELECT 
            EMP_ID,
            EMP_NM,
            EMP_DEPT_CD,
            EMP_POS_CD,
            EMP_STS_CD,
            RGST_DT,
            RGST_TM,
            RGST_EMP_ID,
            UPDT_DT,
            UPDT_TM,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_DATE,
            UPD_DATE
        FROM TB_EMP_LST
        WHERE EMP_ID = #{empId}
    </select>

    <!-- 직원 등록 (Batch용) -->
    <insert id="insert" parameterType="com.ERI.demo.vo.EmpLstVO">
        INSERT INTO TB_EMP_LST (
            EMP_ID,
            EMP_NM,
            EMP_DEPT_CD,
            EMP_POS_CD,
            EMP_STS_CD,
            RGST_DT,
            RGST_TM,
            RGST_EMP_ID,
            UPDT_DT,
            UPDT_TM,
            UPDT_EMP_ID,
            DEL_YN,
            REG_DATE,
            UPD_DATE
        ) VALUES (
            #{empId},
            #{empNm},
            #{empDeptCd},
            #{empPosCd},
            #{empStsCd},
            #{rgstDt},
            #{rgstTm},
            #{rgstEmpId},
            #{updtDt},
            #{updtTm},
            #{updtEmpId},
            'N',
            NOW(),
            NOW()
        )
    </insert>

    <!-- 직원 수정 (Batch용) -->
    <update id="update" parameterType="com.ERI.demo.vo.EmpLstVO">
        UPDATE TB_EMP_LST
        SET EMP_NM = #{empNm},
            EMP_DEPT_CD = #{empDeptCd},
            EMP_POS_CD = #{empPosCd},
            EMP_STS_CD = #{empStsCd},
            UPDT_DT = #{updtDt},
            UPDT_TM = #{updtTm},
            UPDT_EMP_ID = #{updtEmpId},
            UPD_DATE = NOW()
        WHERE EMP_ID = #{empId}
    </update>

    <!-- 전체 직원 수 조회 (삭제되지 않은 데이터만) -->
    <select id="selectTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM TB_EMP_LST
        WHERE DEL_YN = 'N'
    </select>

</mapper> 