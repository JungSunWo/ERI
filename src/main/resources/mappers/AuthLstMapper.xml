<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ERI.demo.mappers.AuthLstMapper">

    <!-- 결과 매핑 -->
    <resultMap id="AuthLstResultMap" type="com.ERI.demo.vo.AuthLstVO">
        <id column="AUTH_CD" property="authCd" />
        <result column="AUTH_NM" property="authNm" />
        <result column="AUTH_DESC" property="authDesc" />
        <result column="AUTH_LVL" property="authLvl" />
        <result column="REG_DATE" property="regDate" />
        <result column="UPD_DATE" property="updDate" />
    </resultMap>

    <!-- 전체 권한 목록 조회 (페이징) -->
    <select id="selectAllWithPaging" resultMap="AuthLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY AUTH_LVL DESC, AUTH_CD) AS rowNum,
            AUTH_CD,
            AUTH_NM,
            AUTH_DESC,
            AUTH_LVL,
            REG_DATE,
            UPD_DATE
        FROM TB_AUTH_LST
        <where>
            <if test="pageRequest.keyword != null and pageRequest.keyword != ''">
                <choose>
                    <when test="pageRequest.searchField == 'authCd'">
                        AND AUTH_CD LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                    </when>
                    <when test="pageRequest.searchField == 'authNm'">
                        AND AUTH_NM LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                    </when>
                    <when test="pageRequest.searchField == 'authDesc'">
                        AND AUTH_DESC LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                    </when>
                    <otherwise>
                        AND (AUTH_CD LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                        OR AUTH_NM LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                        OR AUTH_DESC LIKE CONCAT('%', #{pageRequest.keyword}, '%'))
                    </otherwise>
                </choose>
            </if>
        </where>
        <choose>
            <when test="pageRequest.sortBy == 'authCd'">
                ORDER BY AUTH_CD ${pageRequest.sortDirection}
            </when>
            <when test="pageRequest.sortBy == 'authNm'">
                ORDER BY AUTH_NM ${pageRequest.sortDirection}
            </when>
            <when test="pageRequest.sortBy == 'authDesc'">
                ORDER BY AUTH_DESC ${pageRequest.sortDirection}
            </when>
            <when test="pageRequest.sortBy == 'authLvl'">
                ORDER BY AUTH_LVL ${pageRequest.sortDirection}
            </when>
            <when test="pageRequest.sortBy == 'regDate'">
                ORDER BY REG_DATE ${pageRequest.sortDirection}
            </when>
            <otherwise>
                ORDER BY AUTH_LVL DESC, AUTH_CD
            </otherwise>
        </choose>
        LIMIT #{pageRequest.size} OFFSET #{pageRequest.offset}
    </select>

    <!-- 전체 권한 수 조회 -->
    <select id="selectAllCount" resultType="long">
        SELECT COUNT(*)
        FROM TB_AUTH_LST
        <where>
            <if test="pageRequest.keyword != null and pageRequest.keyword != ''">
                <choose>
                    <when test="pageRequest.searchField == 'authCd'">
                        AND AUTH_CD LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                    </when>
                    <when test="pageRequest.searchField == 'authNm'">
                        AND AUTH_NM LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                    </when>
                    <when test="pageRequest.searchField == 'authDesc'">
                        AND AUTH_DESC LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                    </when>
                    <otherwise>
                        AND (AUTH_CD LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                        OR AUTH_NM LIKE CONCAT('%', #{pageRequest.keyword}, '%')
                        OR AUTH_DESC LIKE CONCAT('%', #{pageRequest.keyword}, '%'))
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>

    <!-- 전체 권한 목록 조회 (페이징 없음) -->
    <select id="selectAll" resultMap="AuthLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY AUTH_LVL DESC, AUTH_CD) AS rowNum,
            AUTH_CD,
            AUTH_NM,
            AUTH_DESC,
            AUTH_LVL,
            REG_DATE,
            UPD_DATE
        FROM TB_AUTH_LST
        ORDER BY AUTH_LVL DESC, AUTH_CD
    </select>

    <!-- 전체 권한 목록 조회 (관리자용) -->
    <select id="selectAllAuths" resultMap="AuthLstResultMap">
        SELECT 
            AUTH_CD,
            AUTH_NM,
            AUTH_DESC,
            AUTH_LVL,
            REG_DATE,
            UPD_DATE
        FROM TB_AUTH_LST
        ORDER BY AUTH_LVL DESC, AUTH_CD
    </select>

    <!-- 권한 코드로 권한 조회 -->
    <select id="selectByAuthCd" parameterType="string" resultMap="AuthLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY AUTH_LVL DESC, AUTH_CD) AS rowNum,
            AUTH_CD,
            AUTH_NM,
            AUTH_DESC,
            AUTH_LVL,
            REG_DATE,
            UPD_DATE
        FROM TB_AUTH_LST
        WHERE AUTH_CD = #{authCd}
    </select>

    <!-- 권한 등록 -->
    <insert id="insert" parameterType="com.ERI.demo.vo.AuthLstVO">
        INSERT INTO TB_AUTH_LST (
            AUTH_CD,
            AUTH_NM,
            AUTH_DESC,
            AUTH_LVL
        ) VALUES (
            #{authCd},
            #{authNm},
            #{authDesc},
            COALESCE(#{authLvl}, 1)
        )
    </insert>

    <!-- 권한 수정 -->
    <update id="update" parameterType="com.ERI.demo.vo.AuthLstVO">
        UPDATE TB_AUTH_LST
        SET 
            AUTH_NM = #{authNm},
            AUTH_DESC = #{authDesc},
            AUTH_LVL = #{authLvl},
            UPD_DATE = CURRENT_TIMESTAMP
        WHERE AUTH_CD = #{authCd}
    </update>

    <!-- 권한 삭제 -->
    <delete id="deleteByAuthCd" parameterType="string">
        DELETE FROM TB_AUTH_LST
        WHERE AUTH_CD = #{authCd}
    </delete>

    <!-- 권한 코드 중복 확인 -->
    <select id="countByAuthCd" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM TB_AUTH_LST
        WHERE AUTH_CD = #{authCd}
    </select>

    <!-- 권한레벨별 권한 목록 조회 -->
    <select id="selectByAuthLvl" parameterType="integer" resultMap="AuthLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY AUTH_LVL DESC, AUTH_CD) AS rowNum,
            AUTH_CD,
            AUTH_NM,
            AUTH_DESC,
            AUTH_LVL,
            REG_DATE,
            UPD_DATE
        FROM TB_AUTH_LST
        WHERE AUTH_LVL = #{authLvl}
        ORDER BY AUTH_LVL DESC, AUTH_CD
    </select>

    <!-- 권한레벨 이상의 권한 목록 조회 -->
    <select id="selectByAuthLvlGreaterThan" parameterType="integer" resultMap="AuthLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY AUTH_LVL DESC, AUTH_CD) AS rowNum,
            AUTH_CD,
            AUTH_NM,
            AUTH_DESC,
            AUTH_LVL,
            REG_DATE,
            UPD_DATE
        FROM TB_AUTH_LST
        WHERE AUTH_LVL >= #{authLvl}
        ORDER BY AUTH_LVL DESC, AUTH_CD
    </select>

</mapper> 