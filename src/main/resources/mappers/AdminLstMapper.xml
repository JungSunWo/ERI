<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ERI.demo.mappers.AdminLstMapper">

    <!-- 결과 매핑 -->
    <resultMap id="AdminLstResultMap" type="com.ERI.demo.vo.AdminLstVO">
        <id column="ADMIN_ID" property="adminId" jdbcType="VARCHAR"/>
        <result column="ADMIN_STS_CD" property="adminStsCd" jdbcType="VARCHAR"/>
        <result column="RGST_EMP_ID" property="rgstEmpId" jdbcType="VARCHAR"/>
        <result column="UPDT_EMP_ID" property="updtEmpId" jdbcType="VARCHAR"/>
        <result column="DEL_YN" property="delYn" jdbcType="CHAR"/>
        <result column="DEL_DATE" property="delDate" jdbcType="TIMESTAMP"/>
        <result column="REG_EMP_ID" property="regEmpId" jdbcType="VARCHAR"/>
        <result column="UPD_EMP_ID" property="updEmpId" jdbcType="VARCHAR"/>
        <result column="REG_DATE" property="regDate" jdbcType="TIMESTAMP"/>
        <result column="UPD_DATE" property="updDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 전체 관리자 목록 조회 (삭제되지 않은 데이터만) -->
    <select id="selectAllAdminLst" resultMap="AdminLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY ADMIN_ID) AS rowNum,
            ADMIN_ID,
            ADMIN_STS_CD,
            RGST_EMP_ID,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_EMP_ID,
            UPD_EMP_ID,
            REG_DATE,
            UPD_DATE
        FROM TB_ADMIN_LST
        WHERE DEL_YN = 'N'
        ORDER BY ADMIN_ID
    </select>

    <!-- 관리자 ID로 관리자 정보 조회 (삭제되지 않은 데이터만) -->
    <select id="selectByAdminId" parameterType="string" resultMap="AdminLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY ADMIN_ID) AS rowNum,
            ADMIN_ID,
            ADMIN_STS_CD,
            RGST_EMP_ID,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_EMP_ID,
            UPD_EMP_ID,
            REG_DATE,
            UPD_DATE
        FROM TB_ADMIN_LST
        WHERE ADMIN_ID = #{adminId}
          AND DEL_YN = 'N'
    </select>

    <!-- 관리자 ID로 관리자 정보 조회 (삭제된 데이터 포함) -->
    <select id="selectByAdminIdWithDeleted" parameterType="string" resultMap="AdminLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY ADMIN_ID) AS rowNum,
            ADMIN_ID,
            ADMIN_STS_CD,
            RGST_EMP_ID,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_EMP_ID,
            UPD_EMP_ID,
            REG_DATE,
            UPD_DATE
        FROM TB_ADMIN_LST
        WHERE ADMIN_ID = #{adminId}
    </select>

    <!-- 관리자 상태 코드로 관리자 목록 조회 (삭제되지 않은 데이터만) -->
    <select id="selectByAdminStsCd" parameterType="string" resultMap="AdminLstResultMap">
        SELECT 
            ROW_NUMBER() OVER (ORDER BY ADMIN_ID) AS rowNum,
            ADMIN_ID,
            ADMIN_STS_CD,
            RGST_EMP_ID,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_EMP_ID,
            UPD_EMP_ID,
            REG_DATE,
            UPD_DATE
        FROM TB_ADMIN_LST
        WHERE ADMIN_STS_CD = #{adminStsCd}
          AND DEL_YN = 'N'
        ORDER BY ADMIN_ID
    </select>

    <!-- 관리자 정보 등록 -->
    <insert id="insertAdminLst" parameterType="com.ERI.demo.vo.AdminLstVO">
        INSERT INTO TB_ADMIN_LST (
            ADMIN_ID,
            ADMIN_STS_CD,
            RGST_EMP_ID,
            UPDT_EMP_ID,
            DEL_YN,
            DEL_DATE,
            REG_EMP_ID,
            UPD_EMP_ID,
            REG_DATE,
            UPD_DATE
        ) VALUES (
            #{adminId},
            #{adminStsCd},
            #{rgstEmpId},
            #{updtEmpId},
            COALESCE(#{delYn}, 'N'),
            #{delDate},
            #{regEmpId},
            #{updEmpId},
            COALESCE(#{regDate}, CURRENT_TIMESTAMP),
            COALESCE(#{updDate}, CURRENT_TIMESTAMP)
        )
    </insert>

    <!-- 관리자 정보 수정 -->
    <update id="updateAdminLst" parameterType="com.ERI.demo.vo.AdminLstVO">
        UPDATE TB_ADMIN_LST
        SET 
            ADMIN_STS_CD = #{adminStsCd},
            RGST_EMP_ID = #{rgstEmpId},
            UPDT_EMP_ID = #{updtEmpId},
            DEL_YN = #{delYn},
            DEL_DATE = #{delDate},
            UPD_EMP_ID = #{updEmpId},
            UPD_DATE = CURRENT_TIMESTAMP
        WHERE ADMIN_ID = #{adminId}
    </update>

    <!-- 관리자 ID로 논리적 삭제 -->
    <update id="deleteAdminLstByAdminId" parameterType="string">
        UPDATE TB_ADMIN_LST
        SET 
            DEL_YN = 'Y',
            DEL_DATE = CURRENT_TIMESTAMP
        WHERE ADMIN_ID = #{adminId}
    </update>

    <!-- 관리자 ID로 복구 -->
    <update id="restoreAdminLstByAdminId" parameterType="string">
        UPDATE TB_ADMIN_LST
        SET 
            DEL_YN = 'N',
            DEL_DATE = NULL
        WHERE ADMIN_ID = #{adminId}
    </update>

    <!-- 전체 관리자 수 조회 (삭제되지 않은 데이터만) -->
    <select id="countAllAdminLst" resultType="int">
        SELECT COUNT(*)
        FROM TB_ADMIN_LST
        WHERE DEL_YN = 'N'
    </select>

    <!-- 관리자 상태 코드별 관리자 수 조회 (삭제되지 않은 데이터만) -->
    <select id="countByAdminStsCd" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM TB_ADMIN_LST
        WHERE ADMIN_STS_CD = #{adminStsCd}
          AND DEL_YN = 'N'
    </select>

</mapper> 